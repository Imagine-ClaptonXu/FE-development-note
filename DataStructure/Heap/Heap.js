// -------- 堆 --------
/*
堆是一种特殊的二叉树，也叫作二叉堆。
二叉堆是计算机科学中一种非常著名的数据结构，由于它能高效、快速地找出最大值和最小值，常被应用于优先队列。也被用于著名的堆排序算法中。

二叉堆是一种特殊的二叉树，有以下【两个特性】。
1，【结构特性】
它是一棵完全二叉树，表示树的每一层都有左侧和右侧子节点（除了最后一层的叶节点），并且最后一层的叶节点尽可能都是左侧子节点。
2，【堆特性】
二叉堆不是最小堆就是最大堆。最小堆允许你快速导出树的最小值，最大堆允许你快速导出树的最大值。所有的节点都大于等于（最大堆）或小于等于（最小堆）每个它的子节点。

尽管二叉堆是二叉树，但并不一定是二叉搜索树（BST）。
在二叉堆中，每个子节点都要大于等于父节点（最小堆）或小于等于父节点（最大堆）。
然而在二叉搜索树中，左侧子节点总是比父节点小，右侧子节点也总是更大。


【二叉树的数组表示】
二叉树有两种表示方式。
第一种是使用一个动态的表示方式，也就是指针（用节点表示），在树中使用过。
              1
        2           3
    4       5   6       7

第二种是使用一个数组，通过索引值检索父节点、左侧和右侧子节点的值。下面展示了两种不同的表示方式。
1 2 3 4 5 6 7


【访问节点】
要访问使用普通数组的二叉树节点，可以用下面的方式操作 index。
对于给定位置 index 的节点：
- 它的左侧子节点的位置是 2 * index + 1（如果位置可用）
- 它的右侧子节点的位置是 2 * index + 2（如果位置可用）
- 它的父节点位置是 index / 2（如果位置可用）


可以在堆数据结构中进行【三个主要操作】。
- insert(value)：这个方法向堆中插入一个新的值。如果插入成功，它返回 true，否则返回 false。
- extract()：这个方法移除最小值（最小堆）或最大值（最大堆），并返回这个值。
- findMinimum()：这个方法返回最小值（最小堆）或最大值（最大堆）且不会移除这个值。
*/
